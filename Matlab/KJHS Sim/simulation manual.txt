%%%%%%%%%%%% 시뮬레이션 프로그램 설명서 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
이 글은 SBR_Simulation 프로그램을 설명하기 위해 작성되었습니다. 
위 프로그램은 matlab simscape 프로그램을 기반으로 하여 제작되었습니다. 원래는 inventor에서 제작된 모형 파일을 에드온을 통해 
simscape로 불러와서 제어하려고 했으나 파라미터 변수값 확인이 어렵고 simscape contact force 라이브러리를 사용하는 동안 각종 오류가 발생하여 
제어에 어려움을 겪었기 때문에 아예 matlab simscape상에서 모델을 제작, prismatic joint블록을 활용 하는 방식으로 처음부터 다시 제작했습니다. 
위 프로그램은 self balancing robot을 최대한 단순화해 제작했습니다. 그렇기에 좌우 각각의 바퀴에 대한 제어입력이 아닌 
두 바퀴에 동일한 제어입력을 가하는 방식으로 제어기를 구성했습니다.

로봇은 바퀴, 암, 바디 부분으로 구성했으며 각 부품들의 무게, 크기등의 파라미터는 일단 임의로 설정했습니다. 이 부분은 추후 수정이 필요합니다.

위 모델은 바퀴가 로봇전체에 가하는 추진력을 바탕으로 제어를 하도록 설계되었습니다. 이 부분은 prismatic joint블록을 활용해서 해당블록에 힘입력을 넣어주면 
위 모델은 바퀴가 로봇전체에 가하는 추진력을 바탕으로 제어를 하도록 설계되었습니다. prismatic joint블록을 활용해서 해당 블록에 힘입력을 넣어주면 
로봇의 바퀴는 해당 입력 힘 만큼의 추진력을 얻습니다. 저희는 토크입력을 넣을 것이기 때문에 모터가 얼마정도의 토크를 가했을 때 바퀴에서 얼마정도의 추력이 발생하는 지 
구하는 변환과정이 필요합니다.

위 모델에 있는 revolute joint들은 각각 배어링의 역할을 하여 joint를 기준으로 암과 바디가 회전진자운동이 가능하도록 제작했습니다. 
또한 각 revolute joint에서 회전각들을 추출하여 이를 PID제어기의 제어 입력으로 넣어 로봇이 균형을 유지할 수 있도록 했습니다. 
제어기의 initial perturbation 부분에 step입력등의 reference 입력을 넣어줄 수 있습니다.   
참고자료
https://kr.mathworks.com/matlabcentral/fileexchange/88768-two-wheeled-self-balancing-robot